name: Build runify

on:
  workflow_dispatch:
  push:

jobs:
  format_check:
    runs-on: ubuntu-latest
    steps:
      - name: Clone repository
        uses: actions/checkout@v3

      - name: Setup go
        uses: actions/setup-go@v3
        with:
          go-version-file: 'server/go.mod'
          check-latest: false
          cache: true
          cache-dependency-path: server/go.sum

      - name: Install deps for format code
        run: make dep_fmt
        working-directory: server

      - name: Check if the code is formatted
        run: make fmt_check
        working-directory: server

  build:
    needs: format_check
    runs-on: ubuntu-latest
    steps:
      - name: Clone repository
        uses: actions/checkout@v3

      - name: Setup go
        uses: actions/setup-go@v3
        with:
          go-version-file: 'server/go.mod'
          check-latest: false
          cache: true
          cache-dependency-path: server/go.sum

      - name: Setup flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: '3.3.2'
          channel: 'stable'
          cache: true
          cache-key: 'flutter-:os:-:channel:-:version:-:arch:-:hash:'
          architecture: x64

      - name: Setup deps
        uses: awalsh128/cache-apt-pkgs-action@latest
        with:
          packages: ninja-build libgtk-3-dev
          version: 1.0

      - name: Build UI and server
        run: make release

      - name: Save build artifacts
        uses: actions/upload-artifact@v3
        with:
          name: runify_release
          path: release/

  release:
    if: startsWith(github.ref, 'refs/tags/v')
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Clone repository
        uses: actions/checkout@v3

      - name: Download build artifacts
        uses: actions/download-artifact@v3
        with:
          name: runify_release
          path: release/

      - name: Compress artifact for deployment
        run: |
          cd release
          zip -r ../runify.zip *
          tar -czvf ../runify.tar.gz *

      - name: Get release version
        run: |
          VERSION_VALUE=$(echo ${GITHUB_REF_NAME#v} | cut -d'-' -f 1)
          echo "RELEASE_VERSION=$VERSION_VALUE" >> $GITHUB_ENV

      - name: Get Changelog Entry
        id: changelog_reader
        uses: mindsers/changelog-reader-action@v2
        with:
          validation_level: warn
          version: ${{ env.RELEASE_VERSION }}
          path: ./CHANGELOG.md

      - name: Create release
        uses: softprops/action-gh-release@v1
        with:
          body: ${{ steps.changelog_reader.outputs.changes }}
          draft: contains(github.ref, 'draft')
          prerelease: contains(github.ref, 'rc')
          token: ${{ secrets.GITHUB_TOKEN }}
          files:  |
            runify.zip
            runify.tar.gz
