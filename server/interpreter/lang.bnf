// Lexical part

_digit : '0'-'9' ;

int : _digit {_digit};
float : _digit {_digit} '.' {_digit};

!whitespace : ' ' | '\t' | '\n' | '\r' ;

// Syntax part

<<
import (
	"github.com/ReanGD/runify/server/interpreter/ast"
)
>>

Calc : Expr0Lvl;

Expr0Lvl :
		Expr0Lvl "+" Expr1Lvl	<< ast.BinaryExpr($Context, $0, $2, '+') >>
	|	Expr0Lvl "-" Expr1Lvl	<< ast.BinaryExpr($Context, $0, $2, '-') >>
	|	Expr1Lvl
;

Expr1Lvl :
		Expr1Lvl "*" Expr2Lvl	<< ast.BinaryExpr($Context, $0, $2, '*') >>
	|	Expr1Lvl "/" Expr2Lvl	<< ast.BinaryExpr($Context, $0, $2, '/') >>
	|	Expr2Lvl
;

Expr2Lvl :
		"+" Expr2Lvl			<< ast.UnaryExpr($Context, $1, '+') >>
	|	"-" Expr2Lvl			<< ast.UnaryExpr($Context, $1, '-') >>
	|	Expr3Lvl
;

Expr3Lvl :
		Expr3Lvl "^"  Number	<< ast.BinaryExpr($Context, $0, $2, '^') >>
	|	Expr3Lvl "**" Number	<< ast.BinaryExpr($Context, $0, $2, '^') >>
	|	Number
;

Number :
		int						<< ast.NewNumber($Context, $0) >>
	|	float					<< ast.NewNumber($Context, $0) >>
	|	Bracket
;

Bracket :
		"(" Expr0Lvl ")"		<< $1, nil >>
;
