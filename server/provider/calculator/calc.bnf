// Lexical part

_digit : '0'-'9' ;

int : {_digit} ;

!whitespace : ' ' | '\t' | '\n' | '\r' ;

// Syntax part

<<
import (
	"github.com/ReanGD/runify/server/provider/calculator/ast"
)
>>

Calc : Expr0Lvl;

Expr0Lvl :
		Expr0Lvl "+" Expr1Lvl	<< ast.BinaryExpr($0, $2, $1) >>
	|   Expr0Lvl "-" Expr1Lvl	<< ast.BinaryExpr($0, $2, $1) >>
	|	Expr1Lvl
;

Expr1Lvl :
		Expr1Lvl "*" Expr2Lvl	<< ast.BinaryExpr($0, $2, $1) >>
	|	Expr1Lvl "/" Expr2Lvl	<< ast.BinaryExpr($0, $2, $1) >>
	|	Expr2Lvl
;

Expr2Lvl :
		"-" Expr2Lvl			<< ast.UnaryExpr($1, $0) >>
	|	"+" Expr2Lvl			<< ast.UnaryExpr($1, $0) >>
	|	Number
;

Number :
		int						<< ast.NewValueFromToken($0) >>
	|	Bracket
;

Bracket :
		"(" Expr0Lvl ")"		<< $1, nil >>
;
